# End to End Suite
#
# Runs on:
#   - PRs if there are code changes to the source files that are noted in `vdev e2e ci_paths`
#   - MQ (always pass)
#   - Scheduled: at midnight UTC Tues-Sat
#   - Manual trigger via Actions UI.

name: E2E Test Suite

on:
  workflow_dispatch:
  pull_request:
  # Needs to pass by default in MQ
  merge_group:
    types: [checks_requested]
  schedule:
    # At midnight UTC Tue-Sat
    - cron: '0 0 * * 2-6'

permissions:
  statuses: write

concurrency:
  # `github.event.number` exists for pull requests, otherwise fall back to SHA for merge queue
  group: ${{ github.workflow }}-${{ github.event.number || github.event.merge_group.head_sha }}
  cancel-in-progress: true

env:
  CONTAINER_TOOL: "docker"
  DD_ENV: "ci"
  DD_API_KEY: ${{ secrets.DD_API_KEY }}
  TEST_DATADOG_API_KEY: ${{ secrets.CI_TEST_DATADOG_API_KEY }}
  RUST_BACKTRACE: full
  TEST_LOG: vector=debug
  VERBOSE: true
  CI: true
  PROFILE: debug
  # observing issues fetching boringssl via HTTPS in the OSX build, seeing if this helps
  # can be removed when we switch back to the upstream openssl-sys crate
  CARGO_NET_GIT_FETCH_WITH_CLI: true
jobs:

  changes:
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/changes.yml
    with:
      source: false
      e2e_tests: true
    secrets: inherit

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-24.04-8core
    timeout-minutes: 45
    needs: changes
    if: always() && (
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      needs.changes.outputs.e2e-datadog-logs == 'true' ||
      needs.changes.outputs.e2e-datadog-metrics == 'true' ||
      needs.changes.outputs.e2e-opentelemetry-logs == 'true'
      )
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: "recursive"

      - run: bash scripts/environment/prepare.sh --modules=datadog-ci

      - run: docker image prune -af ; docker container prune -f

      - name: Determine if secrets are defined (PR author is team member).
        if: github.event_name == 'pull_request'
        env:
          GH_APP_DATADOG_VECTOR_CI_APP_ID: ${{ secrets.GH_APP_DATADOG_VECTOR_CI_APP_ID }}
        run: |
          if [[ "$GH_APP_DATADOG_VECTOR_CI_APP_ID" != "" ]] ; then
            echo "PR_HAS_ACCESS_TO_SECRETS=true" >> "$GITHUB_ENV"
          else
            echo "PR_HAS_ACCESS_TO_SECRETS=false" >> "$GITHUB_ENV"
          fi

      - if: (github.event_name == 'schedule' ||
          github.event_name == 'workflow_dispatch' ||
          needs.changes.outputs.e2e-datadog-logs == 'true') &&
          (github.event_name != 'pull_request' || env.PR_HAS_ACCESS_TO_SECRETS == 'true')
        name: e2e-datadog-logs
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          timeout_minutes: 35
          max_attempts: 3
          command: bash scripts/int-e2e-test.sh e2e datadog-logs

      - if: (github.event_name == 'schedule' ||
          github.event_name == 'workflow_dispatch' ||
          needs.changes.outputs.e2e-datadog-metrics == 'true') &&
          (github.event_name != 'pull_request' || env.PR_HAS_ACCESS_TO_SECRETS == 'true')
        name: e2e-datadog-metrics
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          timeout_minutes: 35
          max_attempts: 3
          command: bash scripts/int-e2e-test.sh e2e datadog-metrics

      - if: (github.event_name == 'schedule' ||
          github.event_name == 'workflow_dispatch' ||
          needs.changes.outputs.e2e-opentelemetry-logs == 'true') &&
          (github.event_name != 'pull_request' || env.PR_HAS_ACCESS_TO_SECRETS == 'true')
        name: e2e-opentelemetry-logs
        run: bash scripts/int-e2e-test.sh e2e opentelemetry-logs


  e2e-test-suite:
    name: E2E Test Suite
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    if: always()
    needs: e2e-tests
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
            echo "One or more jobs failed or were cancelled"
            exit 1
          else
            echo "All jobs completed successfully"
          fi
