# Integration Test Suite
#
# This workflow runs the integration tests. If the workflow is triggered in the merge queue, all integration tests
# are run. If the workflow is triggered in a PR commit, then the files changed in the PR are evaluated to determine
# if any integration tests will run.

name: Integration Test Suite

on:
  pull_request:
  merge_group:
    types: [checks_requested]

concurrency:
  # `github.event.number` exists for pull requests, otherwise fall back to SHA for merge queue
  group: ${{ github.workflow }}-${{ github.event.number || github.event.merge_group.head_sha }}
  cancel-in-progress: true

env:
  AWS_ACCESS_KEY_ID: "dummy"
  AWS_SECRET_ACCESS_KEY: "dummy"
  CONTAINER_TOOL: "docker"
  DD_ENV: "ci"
  DD_API_KEY: ${{ secrets.DD_API_KEY }}
  TEST_DATADOG_API_KEY: ${{ secrets.CI_TEST_DATADOG_API_KEY }}
  TEST_APPSIGNAL_PUSH_API_KEY: ${{ secrets.TEST_APPSIGNAL_PUSH_API_KEY }}
  AXIOM_TOKEN: ${{ secrets.AXIOM_TOKEN }}
  RUST_BACKTRACE: full
  TEST_LOG: vector=debug
  VERBOSE: true
  CI: true
  PROFILE: debug
  # observing issues fetching boringssl via HTTPS in the OSX build, seeing if this helps
  # can be removed when we switch back to the upstream openssl-sys crate
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  changes:
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/changes.yml
    with:
      base_ref: ${{ github.event.pull_request.base.ref }}
      head_ref: ${{ github.event.pull_request.head.ref }}
      source: false
      int_tests: true
    secrets: inherit

  # Job for AMQP
  integration-tests-amqp:
    name: Integration Tests - AMQP
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.amqp == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Determine if secrets are defined (PR author is team member)
        if: github.event_name == 'pull_request'
        env:
          GH_APP_DATADOG_VECTOR_CI_APP_ID: ${{ secrets.GH_APP_DATADOG_VECTOR_CI_APP_ID }}
        run: |
          if [[ "$GH_APP_DATADOG_VECTOR_CI_APP_ID" != "" ]] ; then
            echo "PR_HAS_ACCESS_TO_SECRETS=true" >> "$GITHUB_ENV"
          else
            echo "PR_HAS_ACCESS_TO_SECRETS=false" >> "$GITHUB_ENV"
          fi

      - name: AMQP Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int amqp

  # Job for AppSignal
  integration-tests-appsignal:
    name: Integration Tests - AppSignal
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.appsignal == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Determine if secrets are defined (PR author is team member)
        if: github.event_name == 'pull_request'
        env:
          GH_APP_DATADOG_VECTOR_CI_APP_ID: ${{ secrets.GH_APP_DATADOG_VECTOR_CI_APP_ID }}
        run: |
          if [[ "$GH_APP_DATADOG_VECTOR_CI_APP_ID" != "" ]] ; then
            echo "PR_HAS_ACCESS_TO_SECRETS=true" >> "$GITHUB_ENV"
          else
            echo "PR_HAS_ACCESS_TO_SECRETS=false" >> "$GITHUB_ENV"
          fi

      - name: AppSignal Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int appsignal

  # Job for AWS
  integration-tests-aws:
    name: Integration Tests - AWS
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.aws == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Determine if secrets are defined (PR author is team member)
        if: github.event_name == 'pull_request'
        env:
          GH_APP_DATADOG_VECTOR_CI_APP_ID: ${{ secrets.GH_APP_DATADOG_VECTOR_CI_APP_ID }}
        run: |
          if [[ "$GH_APP_DATADOG_VECTOR_CI_APP_ID" != "" ]] ; then
            echo "PR_HAS_ACCESS_TO_SECRETS=true" >> "$GITHUB_ENV"
          else
            echo "PR_HAS_ACCESS_TO_SECRETS=false" >> "$GITHUB_ENV"
          fi

      - name: AWS Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int aws

  # Job for Axiom
  integration-tests-axiom:
    name: Integration Tests - Axiom
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.axiom == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Determine if secrets are defined (PR author is team member)
        if: github.event_name == 'pull_request'
        env:
          GH_APP_DATADOG_VECTOR_CI_APP_ID: ${{ secrets.GH_APP_DATADOG_VECTOR_CI_APP_ID }}
        run: |
          if [[ "$GH_APP_DATADOG_VECTOR_CI_APP_ID" != "" ]] ; then
            echo "PR_HAS_ACCESS_TO_SECRETS=true" >> "$GITHUB_ENV"
          else
            echo "PR_HAS_ACCESS_TO_SECRETS=false" >> "$GITHUB_ENV"
          fi

      - name: Axiom Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int axiom

  # Job for Azure
  integration-tests-azure:
    name: Integration Tests - Azure
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.azure == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Determine if secrets are defined (PR author is team member)
        if: github.event_name == 'pull_request'
        env:
          GH_APP_DATADOG_VECTOR_CI_APP_ID: ${{ secrets.GH_APP_DATADOG_VECTOR_CI_APP_ID }}
        run: |
          if [[ "$GH_APP_DATADOG_VECTOR_CI_APP_ID" != "" ]] ; then
            echo "PR_HAS_ACCESS_TO_SECRETS=true" >> "$GITHUB_ENV"
          else
            echo "PR_HAS_ACCESS_TO_SECRETS=false" >> "$GITHUB_ENV"
          fi

      - name: Azure Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int azure

  # Job for Clickhouse
  integration-tests-clickhouse:
    name: Integration Tests - Clickhouse
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.clickhouse == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Clickhouse Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int clickhouse

  # Job for Databend
  integration-tests-databend:
    name: Integration Tests - Databend
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.databend == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Databend Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int databend

  # Job for Datadog Agent
  integration-tests-datadog-agent:
    name: Integration Tests - Datadog Agent
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.datadog-agent == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Datadog Agent Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int datadog-agent

  # Job for Datadog Logs
  integration-tests-datadog-logs:
    name: Integration Tests - Datadog Logs
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.datadog-logs == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Datadog Logs Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int datadog-logs

  # Job for Datadog Metrics
  integration-tests-datadog-metrics:
    name: Integration Tests - Datadog Metrics
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.datadog-metrics == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Datadog Metrics Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int datadog-metrics

  # Job for Datadog Traces
  integration-tests-datadog-traces:
    name: Integration Tests - Datadog Traces
    runs-on: ubuntu-20.04
    needs: changes
    if: always() && (github.event_name == 'merge_group' || needs.changes.outputs.datadog-traces == 'true')
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - run: sudo npm -g install @datadog/datadog-ci

      - run: sudo -E bash scripts/ci-free-disk-space.sh
      - run: docker image prune -af ; docker container prune -f

      - name: Datadog Traces Integration Tests
        run: bash scripts/ci-int-e2e-test.sh int datadog-traces

  # Integration Test Suite job to aggregate results
  integration-test-suite:
    name: Integration Test Suite
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    if: always()
    needs:
      - changes
      # Add all the parallel jobs here
      - integration-tests-amqp
      - integration-tests-appsignal
      - integration-tests-aws
      - integration-tests-axiom
      - integration-tests-azure
      - integration-tests-clickhouse
      - integration-tests-databend
      - integration-tests-datadog-agent
      - integration-tests-datadog-logs
      - integration-tests-datadog-metrics
      - integration-tests-datadog-traces
      # Add other test jobs as needed
    env:
      FAILED: ${{ contains(needs.*.result, 'failure') }}
    steps:
      - run: |
          echo "failed=${{ env.FAILED }}"
          if [[ "$FAILED" == "true" ]] ; then
            exit 1
          else
            exit 0
          fi
